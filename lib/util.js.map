{"version":3,"file":"util.js","sourceRoot":"","sources":["util.ts"],"names":[],"mappings":";;;;;AAAA,0DAA0C;AAK1C;;;;;;;GAOG;AACH,SAAgB,CAAC,CAAuE,EAAK,EAAE,MAA2B,EAAE,IAAc,EAAE,KAAwB,EAAE,MAAY;IAEjL,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAC/B,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EACjC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAA;IAEtB,IAAI,QAAQ,GAAG,CAAC,IAAI,MAAM,EAC1B;QACC,IAAI,KAAK,GAAG,MAAM;YACjB,CAAC,CAAC,MAAM;YACR,aAAa;YACb,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAA;QAEpC,IAAI,SAAS,EACb;YACC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;SAClB;QAED,OAAO,KAAK,CAAA;KACZ;IAED,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAA;IAEhC,IAAI,CAAC,CAAC,QAAQ,KAAK,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC9C;QACC,OAAO,CAAC,CAAC,EAAE,EAAE,mBAAI,CAAC,MAAmB,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAA;KAC1E;IAED,IAAI,CAAC,KAAK,EAAE,CAAA;IACZ,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;QAEzB,CAAC,CAAC,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAA;IAC/C,CAAC,CAAC,CAAA;IAEF,OAAO,MAAM,CAAA;AACd,CAAC;AAnCD,cAmCC;AAED;;;GAGG;AACH,SAAgB,CAAC,CAAC,IAAuB;IAExC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;QAAE,OAAO,IAAI,CAAA;IAEpC,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;SAC7B,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,KAAK,EAAE,CAAC,CAAA;AACpC,CAAC;AAND,cAMC;AAED;;;GAGG;AACH,SAAgB,CAAC,CAAC,MAA2B;IAE5C,OAAO,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;QAC3B,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM;QAC5C,CAAC,CAAC,MAAM,CAAA;AACV,CAAC;AALD,cAKC","sourcesContent":["import _get, { Options } from 'get-value';\nimport _set from 'set-value';\nimport _has from 'has-value';\nimport _unset from 'unset-value';\n\n/**\n * @param  {String} fn\n * @param  {Object} target\n * @param  {Array.<String>} path\n * @param  {*} extra\n * @param  {Array} result (optional)\n * @return {*}\n */\nexport function r<T, F extends typeof _get | typeof _set | typeof _has | typeof _unset>(fn: F, target: unknown | unknown[], path: string[], extra?: Parameters<F>[2], result?: T[]): T | T[]\n{\n\tlet symIndex = path.indexOf('*'),\n\t\thasResult = Array.isArray(result),\n\t\tisLast = !path.length\n\n\tif (symIndex < 0 || isLast)\n\t{\n\t\tlet value = isLast\n\t\t\t? target\n\t\t\t// @ts-ignore\n\t\t\t: fn(target, path.join('.'), extra)\n\n\t\tif (hasResult)\n\t\t{\n\t\t\tresult.push(value)\n\t\t}\n\n\t\treturn value\n\t}\n\n\tresult = hasResult ? result : []\n\n\tif (!(symIndex === 0 && Array.isArray(target)))\n\t{\n\t\treturn r(fn, _get(target as unknown[], path.shift()), path, extra, result)\n\t}\n\n\tpath.shift()\n\ttarget.forEach((target) =>\n\t{\n\t\tr(fn, target, Array.from(path), extra, result)\n\t})\n\n\treturn result\n}\n\n/**\n * @param {String|Array} path\n * @return {Array.<String>}\n */\nexport function p(path: string | string[])\n{\n\tif (Array.isArray(path)) return path\n\n\treturn path.split(/\\.*(\\*)\\.*/)\n\t\t.filter(segment => segment !== '')\n}\n\n/**\n * @param {Array|Boolean} result\n * @return {Boolean}\n */\nexport function b(result: boolean | boolean[])\n{\n\treturn Array.isArray(result)\n\t\t? !result.filter(boolean => !boolean).length\n\t\t: result\n}\n"]}