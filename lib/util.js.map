{"version":3,"file":"util.js","sourceRoot":"","sources":["util.ts"],"names":[],"mappings":"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","sourcesContent":["/// <reference path=\"../module.d.ts\" />\nimport _get, { Options } from 'get-value';\nimport _set from 'set-value';\nimport _has from 'has-value';\nimport _unset from 'unset-value';\nimport splitString from 'split-string';\n// @ts-ignore\nimport escapeSplit from 'escape-split';\nimport { ITSKeys } from 'ts-type/lib/type/base';\n\nconst SymStar = Symbol('*');\n\nexport type IInputPaths = string | ITSKeys[];\n\nconst splitSpecific = escapeSplit({ delimiter: '.', escaper: '\\\\' });\n\nexport function r<T, F extends typeof _get | typeof _set | typeof _has | typeof _unset>(fn: F, target: unknown | unknown[], paths: string | ITSKeys[], extra?: Parameters<F>[2], result?: T[]): T | T[]\n{\n\tpaths = p(paths);\n\treturn r0(fn, target, paths, extra, result);\n}\n\nexport function r0<T, F extends typeof _get | typeof _set | typeof _has | typeof _unset>(fn: F, target: unknown | unknown[], paths: ITSKeys[], extra?: Parameters<F>[2], result?: T[]): T | T[]\n{\n\tlet symIndex = paths.indexOf(SymStar),\n\t\thasResult = result != null,\n\t\tisLast = !paths.length;\n\n\tif (symIndex < 0)\n\t{\n\t\tlet value = isLast\n\t\t\t? target\n\t\t\t// @ts-ignore\n\t\t\t: fn(target, paths, extra)\n\t\t;\n\n\t\tif (hasResult)\n\t\t{\n\t\t\tresult.push(value)\n\t\t}\n\n\t\treturn value\n\t}\n\n\tresult = result || [];\n\n\tif (symIndex === 0)\n\t{\n\t\tlet keys = ObjectKeysExtra(target as any, {\n\t\t\t//nonEnumerable: true,\n\t\t\tsymbol: true,\n\t\t});\n\n\t\tpaths.shift();\n\n\t\tkeys\n\t\t\t.forEach(k => {\n\t\t\t\tr0(fn, target, [k].concat(paths), extra, result)\n\t\t\t})\n\t\t;\n\n\t\treturn result\n\t}\n\telse\n\t{\n\t\tlet p1 = paths.slice(0, symIndex);\n\t\tlet p2 = paths.slice(symIndex);\n\n\t\treturn r0(fn, _get(target as object, p1 as any), p2, extra, result)\n\t}\n}\n\nexport function ObjectKeysExtra(obj: object, options: {\n\t/**\n\t * include non-enumerable keys\n\t */\n\tnonEnumerable?: boolean;\n\t/**\n\t * include symbol\n\t */\n\tsymbol?: boolean,\n} = {})\n{\n\tlet keys: ITSKeys[] = options.nonEnumerable ?\n\t\tObject.getOwnPropertyNames(obj)\n\t\t: Object.keys(obj)\n\t;\n\n\tif (options.symbol)\n\t{\n\t\tkeys.push(...Object.getOwnPropertySymbols(obj))\n\t}\n\n\treturn keys\n}\n\n/**\n * handle input to paths\n *\n * @param {string | ITSKeys[]} paths\n * @returns {ITSKeys[]}\n */\nexport function p(paths: string | ITSKeys[]): ITSKeys[]\n{\n\treturn p1(p0(paths));\n}\n\nexport function p0(paths: string | ITSKeys[]): ITSKeys[]\n{\n\tif (Array.isArray(paths)) return paths.slice();\n\n\treturn splitSpecific(paths);\n}\n\nexport function p1(paths: ITSKeys[]): ITSKeys[]\n{\n\treturn paths\n\t\t.map(v => {\n\t\t\tif (v === '*')\n\t\t\t{\n\t\t\t\treturn SymStar;\n\t\t\t}\n\t\t\telse if (v === '\\\\*')\n\t\t\t{\n\t\t\t\tv = '*';\n\t\t\t}\n\n\t\t\treturn v\n\t\t})\n\t\t;\n}\n\n/**\n * check all value is true\n *\n * @param {boolean | boolean[]} result\n * @returns {boolean}\n */\nexport function b(result: boolean | boolean[]): boolean\n{\n\treturn Array.isArray(result)\n\t\t? result.every(boolean => !!boolean)\n\t\t: result\n}\n\nexport function b_some(result: boolean | boolean[]): boolean\n{\n\treturn Array.isArray(result)\n\t\t? result.some(boolean => !!boolean)\n\t\t: result\n}\n"]}